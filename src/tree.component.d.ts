import { OnInit, EventEmitter, ElementRef } from '@angular/core';
import { TreeModel, NodeEvent } from './tree.types';
import { TreeOptions } from './options.types';
import { NodeDraggableService } from './draggable/node-draggable.service';
import { NodeMenuService } from './menu/node-menu.service';
import { TreeService } from './tree.service';
export declare class TreeInternalComponent implements OnInit {
    private nodeMenuService;
    private nodeDraggableService;
    private treeService;
    private element;
    tree: TreeModel;
    parentTree: TreeModel;
    indexInParent: number;
    options: TreeOptions;
    nodeExpanded: EventEmitter<NodeEvent>;
    nodeCollapsed: EventEmitter<NodeEvent>;
    nodeRemoved: EventEmitter<NodeEvent>;
    leftMenuButton: ElementRef;
    private leftMenuOptions;
    private rightMenuOptions;
    constructor(nodeMenuService: NodeMenuService, nodeDraggableService: NodeDraggableService, treeService: TreeService, element: ElementRef);
    ngOnInit(): void;
    private initializeApi();
    onNodeSelected(e: MouseEvent, tree: TreeModel): void;
    private setUpNodeSelectedEventHandler();
    private setUpRightMenuEventHandler();
    private setUpLeftMenuEventHandler();
    private setUpDraggableEventHandler();
    private moveNodeToThisTreeAndRemoveFromPreviousOne(e);
    private moveNodeToParentTreeAndRemoveFromPreviousOne(e);
    private isEditInProgress();
    private isFolder();
    private hasChild(child);
    private isSiblingOf(child);
    private swapWithSibling(sibling);
    private isNodeExpanded();
    private switchFoldingType(e, tree);
    private getNodeIconCssClass(node);
    private getLeftMenuCssClass();
    private getFoldingTypeCssClass(node);
    private getNextFoldingType(node);
    private handleFoldingType(parent, node);
    private onMenuItemSelected(e);
    private onRenameSelected();
    private onRemoveSelected();
    private onNewSelected(e);
    private onChildRemoved(e, parent?);
    private showLeftMenu(e);
    private showRightMenu(e);
    private applyNewValue(e, node);
    private onNodeDoubleClicked(e, tree);
}
export declare class TreeComponent implements OnInit {
    private treeService;
    tree: TreeModel;
    options: TreeOptions;
    nodeCreated: EventEmitter<any>;
    nodeRemoved: EventEmitter<any>;
    nodeRenamed: EventEmitter<any>;
    nodeSelected: EventEmitter<any>;
    nodeExpanded: EventEmitter<any>;
    nodeCollapsed: EventEmitter<any>;
    nodeMoved: EventEmitter<any>;
    treeInternalComponent: TreeInternalComponent;
    private mainMenuOptions;
    private hasMainMenu;
    constructor(treeService: TreeService);
    ngOnInit(): void;
    triggerSelection(e: MouseEvent, node: TreeModel): void;
}
